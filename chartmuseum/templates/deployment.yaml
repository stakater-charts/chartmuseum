---
apiVersion: v1
kind: List
items:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    annotations:
      configmap.fabric8.io/update-on-change: {{ template "name" . }}
      fabric8.io/target-platform: kubernetes
    labels:
{{ include "labels.stakater" . | indent 6 }}
{{ include "labels.chart" . | indent 6 }}
    name: {{ template "name" . }}
  spec:
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
{{ include "labels.selector" . | indent 8 }}
    template:
      metadata:
        annotations:
          configmap.fabric8.io/update-on-change: {{ template "name" . }}
          fabric8.io/target-platform: kubernetes
          {{- with .Values.chartmuseum.config.fluentd }}
          fluentd_configuration: >
            [
              [
                {
                  "expression": "{{ .regex }}",
                  "time_format": "{{ .timeFormat }}",
                  "container_name": {{ template "quoted-name" $ }}
                }
              ]
            ]
          {{- end }}
        labels:
{{ include "labels.selector" . | indent 10 }}
      spec:
        containers:
        - name: {{ template "name" . }}
          env:
          - name: PROJECT_NAMESPACE
            value: ${PROJECT_NAMESPACE}
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: KUBERNETES_MASTER
            value: {{ .Values.kubernetes.host }}
          - name: STORAGE
            value: local
          - name: ALLOW_OVERWRITE
            value: "{{ .Values.chartmuseum.config.allowOverwrite }}"
          {{- if .Values.chartmuseum.config.auth.enabled }}
          - name: BASIC_AUTH_USER
            value: "{{ .Values.chartmuseum.config.auth.username }}"
          - name: BASIC_AUTH_PASS
            value: "{{ .Values.chartmuseum.config.auth.password }}"
          - name: AUTH_ANONYMOUS_GET
            value: "{{ .Values.chartmuseum.config.auth.allowAnonymousGet }}"
          {{- end }}
          image: "{{ .Values.chartmuseum.image.name }}:{{ .Values.chartmuseum.image.tag }}"
          imagePullPolicy: {{ .Values.chartmuseum.image.pullPolicy }}
          args:
          - --port=8080
          - --storage-local-rootdir={{ .Values.chartmuseum.config.localStoragePath }}
          ports:
          - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
          - mountPath: {{ .Values.chartmuseum.config.localStoragePath }}
            name: chart-storage
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 80m
              memory: 64Mi
        volumes:
        - name: chart-storage
          persistentVolumeClaim:
            claimName: chart-storage
